# Generated by Django 5.2.5 on 2025-10-08 13:27

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, help_text='Discount value. Flat or percentage depending on in_percentage', max_digits=10, null=True)),
                ('in_percentage', models.BooleanField(default=False, help_text='If True, discount is percentage-based')),
                ('validity_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('max_usage_per_user', models.PositiveIntegerField(blank=True, help_text='Max times a user can use this coupon', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GlobalSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_deposit_required', models.BooleanField(default=True, help_text='Default: Is deposit required for all shops?')),
                ('default_deposit_type', models.CharField(choices=[('fixed', 'Fixed Amount'), ('percentage', 'Percentage')], default='percentage', help_text='Default deposit type for all shops', max_length=10)),
                ('default_deposit_percentage', models.PositiveIntegerField(default=20, help_text='Default percentage deposit (e.g., 20 means 20%)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('default_free_cancellation_hours', models.PositiveIntegerField(default=24, help_text='Default hours before booking for free cancellation')),
                ('default_cancellation_fee_percentage', models.PositiveIntegerField(default=50, help_text='Default cancellation fee percentage')),
                ('default_no_refund_hours', models.PositiveIntegerField(default=4, help_text='Default hours before booking when no refund is given')),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Global Settings',
                'verbose_name_plural': 'Global Settings',
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('subtitle', models.CharField(blank=True, max_length=500, null=True)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Discount amount or promotion value', max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RatingReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')], help_text='Rating from 1 to 5')),
                ('review', models.TextField(blank=True, null=True)),
                ('review_img', models.ImageField(blank=True, null=True, upload_to='reviews/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(help_text='Reply message to the review')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Replies',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Revenue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('revenue', models.DecimalField(decimal_places=2, help_text='Total revenue amount', max_digits=10)),
                ('timestamp', models.DateField(auto_now_add=True, help_text='Revenue record date')),
            ],
            options={
                'verbose_name': 'Revenue',
                'verbose_name_plural': 'Revenues',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=10, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('service_img', models.ImageField(blank=True, null=True, upload_to='services/')),
                ('is_deposit_required', models.BooleanField(default=False)),
                ('deposit_type', models.CharField(blank=True, choices=[('fixed', 'Fixed Amount'), ('percentage', 'Percentage')], max_length=10, null=True)),
                ('deposit_amount', models.DecimalField(blank=True, decimal_places=2, help_text="Fixed deposit amount (if deposit_type is 'fixed')", max_digits=10, null=True)),
                ('deposit_percentage', models.PositiveIntegerField(blank=True, help_text="Percentage deposit (if deposit_type is 'percentage')", null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('duration', models.PositiveIntegerField(blank=True, help_text='Duration of the service in minutes', null=True)),
                ('capacity', models.PositiveIntegerField(default=1, help_text='Maximum number of people who can take this service at a time')),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('sc_img', models.ImageField(blank=True, null=True, upload_to='services-category/')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceDisabledTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField(db_index=True)),
            ],
            options={
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='ServiceWishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('capacity', models.PositiveIntegerField()),
                ('start_at', models.TimeField()),
                ('close_at', models.TimeField()),
                ('break_start_time', models.TimeField(blank=True, null=True)),
                ('break_end_time', models.TimeField(blank=True, null=True)),
                ('about_us', models.TextField(blank=True, null=True)),
                ('shop_img', models.ImageField(blank=True, null=True, upload_to='shop/')),
                ('close_days', models.JSONField(blank=True, default=list, help_text="List of closed days (e.g., ['monday', 'tuesday'])")),
                ('default_is_deposit_required', models.BooleanField(default=True, help_text='Default setting for whether deposits are required for new services')),
                ('default_deposit_type', models.CharField(blank=True, choices=[('fixed', 'Fixed Amount'), ('percentage', 'Percentage')], default='percentage', help_text='Default deposit type for new services', max_length=10, null=True)),
                ('default_deposit_percentage', models.PositiveIntegerField(blank=True, default=20, help_text='Default percentage deposit for new services', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('rejected', 'Rejected'), ('verified', 'Verified')], default='pending', max_length=10)),
                ('free_cancellation_hours', models.PositiveIntegerField(default=24)),
                ('cancellation_fee_percentage', models.PositiveIntegerField(default=50)),
                ('no_refund_hours', models.PositiveIntegerField(default=4)),
                ('is_deposit_required', models.BooleanField(default=False, help_text='Is a deposit required for booking?')),
                ('deposit_amount', models.DecimalField(decimal_places=2, default=0.0, help_text='The fixed amount for the deposit.', max_digits=10)),
                ('is_verified', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Slot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(db_index=True)),
                ('end_time', models.DateTimeField()),
                ('capacity_left', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='SlotBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(db_index=True)),
                ('end_time', models.DateTimeField()),
                ('status', models.CharField(choices=[('confirmed', 'Confirmed'), ('cancelled', 'Cancelled')], default='confirmed', max_length=12)),
                ('payment_status', models.CharField(choices=[('pending', 'Pending'), ('success', 'Success'), ('refund', 'Refund')], default='pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='VerificationFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(help_text='Upload verification document (e.g., trade license, ID card)', upload_to='shop/verifications/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChatThread',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='threads', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fcm_token', models.CharField(max_length=255)),
                ('device_token', models.CharField(max_length=255)),
                ('device_type', models.CharField(default='android', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteShop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_shops', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('thread', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='api.chatthread')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=512)),
                ('notification_type', models.CharField(default='chat', max_length=50)),
                ('data', models.JSONField(blank=True, default=dict)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
